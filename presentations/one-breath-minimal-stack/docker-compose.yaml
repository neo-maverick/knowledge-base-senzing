version: '3.8'
services:

  rabbitmq:
    container_name: senzing-rabbitmq
    environment:
#     See https://github.com/bitnami/bitnami-docker-rabbitmq#configuration
      RABBITMQ_PASSWORD: bitnami
      RABBITMQ_USERNAME: user
    image: bitnami/rabbitmq:3.10.7-debian-11-r6
    networks:
      - senzing
    ports:
      - 15672:15672
      - 5672:5672
    restart: always

  postgres:
    container_name: senzing-postgres
    environment:
#     See https://github.com/bitnami/bitnami-docker-postgresql#configuration
      POSTGRESQL_DATABASE: G2
      POSTGRESQL_PASSWORD: senzing
      POSTGRESQL_POSTGRES_PASSWORD: postgres
      POSTGRESQL_USERNAME: senzing
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    image: bitnami/postgresql:14.5.0-debian-11-r1
    networks:
      - senzing
    ports:
      - 5432:5432
    restart: always

  init-postgresql:
    container_name: senzing-init-postgresql
    depends_on:
      - postgres
    environment:
      LC_CTYPE: en_US.utf8
#     See https://github.com/Senzing/init-postgresql#configuration
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "postgresql://postgres:postgres@senzing-postgres:5432:G2/"
          }
        }
      SENZING_SUBCOMMAND: mandatory
    image: public.ecr.aws/senzing/init-postgresql:1.0.3
    networks:
      - senzing
    read_only: true
    restart: on-failure

  g2configtool:
    command:
      - /bin/bash
      - -c
      - echo "$${SENZING_G2CONFIG_GTC}" >> /tmp/G2Config.gtc; /opt/senzing/g2/python/G2ConfigTool.py -f /tmp/G2Config.gtc
    container_name: senzing-g2configtools
    depends_on:
      - init-postgresql
    environment:
      LC_CTYPE: en_US.utf8
#     See https://github.com/Senzing/g2configtool
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "postgresql://postgres:postgres@senzing-postgres:5432:G2/"
          }
        }
      SENZING_G2CONFIG_GTC: |
        addDataSource CUSTOMERS
        addDataSource REFERENCE
        addDataSource WATCHLIST
        save
    image: public.ecr.aws/senzing/senzingapi-tools:3.2.0
    networks:
      - senzing
    read_only: true
    restart: on-failure
    tmpfs:
      - /tmp

  pocserver:
    container_name: senzing-poc-server
    depends_on:
      - postgres
    environment:
      SENZING_API_SERVER_ALLOWED_ORIGINS: '*'
      SENZING_API_SERVER_BIND_ADDR: 'all'
      SENZING_API_SERVER_ENABLE_ADMIN: 'true'
      SENZING_API_SERVER_PORT: '8250'
      SENZING_API_SERVER_SKIP_ENGINE_PRIMING: 'true'
      SENZING_API_SERVER_SKIP_STARTUP_PERF: 'true'
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "postgresql://postgres:postgres@senzing-postgres:5432:G2/"
          }
        }
      SENZING_RABBITMQ_LOAD_EXCHANGE: senzing-rabbitmq-exchange
      SENZING_RABBITMQ_LOAD_HOST: senzing-rabbitmq
      SENZING_RABBITMQ_LOAD_PASSWORD: bitnami
      SENZING_RABBITMQ_LOAD_PORT: 5672
      SENZING_RABBITMQ_LOAD_ROUTING_KEY: senzing.records
      SENZING_RABBITMQ_LOAD_USERNAME: user
      SENZING_RABBITMQ_LOAD_VIRTUAL_HOST: "/"
    image: public.ecr.aws/senzing/senzing-poc-server:3.2.2
    networks:
      - senzing
    ports:
      - 8250:8250
    read_only: true
    restart: always
    tmpfs:
      - /tmp

  webapp:
    container_name: senzing-webapp
    depends_on:
      - pocserver
    environment:
#     See https://github.com/Senzing/entity-search-web-app#configuration
      SENZING_API_SERVER_URL: http://senzing-poc-server:8250
      SENZING_CONSOLE_SERVER_URL: ws://senzing-webapp-console:8257
      SENZING_WEB_SERVER_ADMIN_AUTH_MODE: NONE
      SENZING_WEB_SERVER_ADMIN_AUTH_PATH: http://senzing-webapp:80
      SENZING_WEB_SERVER_INTERNAL_URL: http://senzing-webapp:80
      SENZING_WEB_SERVER_PORT: 80
      SENZING_WEB_SERVER_STREAM_CLIENT_URL: wss://senzing-poc-server:8250/ws
    image: public.ecr.aws/senzing/entity-search-web-app:2.7.1
    networks:
      - senzing
    ports:
      - 80:80
    read_only: true
    restart: always

  producer:
    container_name: senzing-stream-producer
    depends_on:
      - rabbitmq
    environment:
#     See https://github.com/Senzing/stream-producer#configuration
      SENZING_DEFAULT_DATA_SOURCE: TEST
      SENZING_DELAY_IN_SECONDS: 30
      SENZING_RABBITMQ_EXCHANGE: senzing-rabbitmq-exchange
      SENZING_RABBITMQ_HOST: senzing-rabbitmq
      SENZING_RABBITMQ_PASSWORD: bitnami
      SENZING_RABBITMQ_QUEUE: senzing-rabbitmq-queue
      SENZING_RABBITMQ_ROUTING_KEY: senzing.records
      SENZING_RABBITMQ_USERNAME: user
      SENZING_SUBCOMMAND: json-to-rabbitmq
      SENZING_DEBUG: "true"
      SENZING_MONITORING_PERIOD_IN_SECONDS: 60
      SENZING_LOG_LEVEL: debug
    image: senzing/stream-producer:1.8.0
    networks:
      - senzing
    read_only: true
    restart: on-failure
    user: 1000:1000
    volumes:
      - .:/var/opt/senzing

  loader:
    container_name: senzing-stream-loader
    depends_on:
      - rabbitmq
      - g2configtool
    environment:
      LC_CTYPE: en_US.utf8
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_DELAY_IN_SECONDS: 30
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "postgresql://postgres:postgres@senzing-postgres:5432:G2/"
          }
        }
      SENZING_MONITORING_PERIOD_IN_SECONDS: 60
      SENZING_RABBITMQ_HOST: senzing-rabbitmq
      SENZING_RABBITMQ_PASSWORD: bitnami
      SENZING_RABBITMQ_QUEUE: senzing-rabbitmq-queue
      SENZING_RABBITMQ_USE_EXISTING_ENTITIES: "False"
      SENZING_RABBITMQ_USERNAME: user
      SENZING_SUBCOMMAND: rabbitmq
    image: public.ecr.aws/senzing/stream-loader:2.1.0
    networks:
      - senzing
    read_only: true
    restart: always

  redoer:
    container_name: senzing-redoer
    depends_on:
      - loader
    environment:
#     See https://github.com/Senzing/redoer#configuration
      SENZING_DELAY_IN_SECONDS: 60
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "postgresql://postgres:postgres@senzing-postgres:5432:G2/"
          }
        }
      SENZING_EXIT_ON_THREAD_TERMINATION: "false"
      SENZING_MONITORING_PERIOD_IN_SECONDS: 60
      SENZING_SUBCOMMAND: redo
    image: public.ecr.aws/senzing/redoer:2.1.0
    networks:
      - senzing
    read_only: true
    restart: always

networks:
  senzing:
    name: senzing-network
